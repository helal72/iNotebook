{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const noteInitial = [];\n  const [notes, setNotes] = useState(noteInitial);\n\n  //fetch all notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnode`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM4NGQ0Njg1MTU5ZGIxZDE0YTY0NDFiIn0sImlhdCI6MTY2OTY1MjIzOX0.5WfM9VS0Mu9VZy4i6q7RZEQP8vhklxqxXhJuA1IdPZs\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n\n    //setNotes(notes.concat(note))\n  };\n\n  //add note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM4NGQ0Njg1MTU5ZGIxZDE0YTY0NDFiIn0sImlhdCI6MTY2OTY1MjIzOX0.5WfM9VS0Mu9VZy4i6q7RZEQP8vhklxqxXhJuA1IdPZs\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    console.log(\"adding a new note\");\n    const note = {\n      \"_id\": \"6385a4f6264fa2ffb2acd3ab54de\",\n      \"user\": \"6384d4685159db1d14a6441b\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-11-29T06:19:14.634Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  };\n  //delete note\n  const deleteNote = id => {\n    console.log(\"deleted\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  //edit note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM4NGQ0Njg1MTU5ZGIxZDE0YTY0NDFiIn0sImlhdCI6MTY2OTY1MjIzOX0.5WfM9VS0Mu9VZy4i6q7RZEQP8vhklxqxXhJuA1IdPZs\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      getNotes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"vS+yqGJfAcVJ8XYDTXAd5OCG4B0=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","NoteState","props","host","noteInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","index","length","element","children"],"sources":["E:/Work/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props) => {\r\n    const host = \"http://localhost:5000\"\r\n    const noteInitial = []\r\n    const [notes, setNotes] = useState(noteInitial)\r\n\r\n    //fetch all notes\r\n    const getNotes = async () => {\r\n        const response = await fetch(`${host}/api/notes/fetchallnode`, {\r\n            method: \"GET\",\r\n            headers: { \r\n                \"Content-type\": \"application/json\" ,\r\n                \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM4NGQ0Njg1MTU5ZGIxZDE0YTY0NDFiIn0sImlhdCI6MTY2OTY1MjIzOX0.5WfM9VS0Mu9VZy4i6q7RZEQP8vhklxqxXhJuA1IdPZs\"\r\n            },\r\n        });\r\n        const json = await response.json()\r\n        console.log(json)\r\n        \r\n        //setNotes(notes.concat(note))\r\n    }\r\n    \r\n    //add note\r\n    const addNote = async (title, description, tag) => {\r\n        const response = await fetch(`${host}/api/notes/addnote`, {\r\n            method: \"POST\",\r\n            headers: { \r\n                \"Content-type\": \"application/json\" ,\r\n                \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM4NGQ0Njg1MTU5ZGIxZDE0YTY0NDFiIn0sImlhdCI6MTY2OTY1MjIzOX0.5WfM9VS0Mu9VZy4i6q7RZEQP8vhklxqxXhJuA1IdPZs\"\r\n            },\r\n            body: JSON.stringify({title,description,tag})\r\n        });\r\n        \r\n        console.log(\"adding a new note\")\r\n        const note = {\r\n            \"_id\": \"6385a4f6264fa2ffb2acd3ab54de\",\r\n            \"user\": \"6384d4685159db1d14a6441b\",\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"tag\": tag,\r\n            \"date\": \"2022-11-29T06:19:14.634Z\",\r\n            \"__v\": 0\r\n        };\r\n        setNotes(notes.concat(note))\r\n    }\r\n    //delete note\r\n    const deleteNote = (id) => {\r\n        console.log(\"deleted\" + id)\r\n        const newNotes = notes.filter((note) => { return note._id !== id })\r\n        setNotes(newNotes)\r\n    }\r\n    //edit note\r\n    const editNote = async (id, title, description, tag) => {\r\n       const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n            method: \"POST\",\r\n            headers: { \r\n                \"Content-type\": \"application/json\" ,\r\n                \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjM4NGQ0Njg1MTU5ZGIxZDE0YTY0NDFiIn0sImlhdCI6MTY2OTY1MjIzOX0.5WfM9VS0Mu9VZy4i6q7RZEQP8vhklxqxXhJuA1IdPZs\"\r\n            },\r\n            body: JSON.stringify({title,description,tag})\r\n        });\r\n        const json = response.json()\r\n        for (let index = 0; index < notes.length; index++) {\r\n            const element = notes[index];\r\n            if (element._id === id) {\r\n                element.title = title;\r\n                element.description = description;\r\n                element.tag = tag\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <NoteContext.Provider value={{ notes, getNotes, addNote, deleteNote, editNote }}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}