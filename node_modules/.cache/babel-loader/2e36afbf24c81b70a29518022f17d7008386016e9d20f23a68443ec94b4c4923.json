{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const noteInitial = [];\n  const userInitial = [];\n  const [notes, setNotes] = useState(noteInitial);\n  const [user, setUser] = useState(userInitial);\n  //fetch all notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnode`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n\n  //fetch all users\n  const getUser = async () => {\n    const response = await fetch(`${host}/api/auth/getuser`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setUser(json);\n  };\n  //add note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n  //delete note\n  const deleteNote = async id => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  //edit note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      user,\n      notes,\n      getNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"vOnmQmwg1zUVSyUFLGVL003ZPyk=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","NoteState","props","host","noteInitial","userInitial","notes","setNotes","user","setUser","getNotes","response","fetch","method","headers","localStorage","getItem","json","getUser","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","console","log","newNotes","filter","_id","editNote","parse","index","length","element","children"],"sources":["E:/Work/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props) => {\r\n    const host = \"http://localhost:5000\"\r\n    const noteInitial = []\r\n    const userInitial = []\r\n    const [notes, setNotes] = useState(noteInitial)\r\n    const [user, setUser] = useState(userInitial)\r\n    //fetch all notes\r\n    const getNotes = async () => {\r\n        const response = await fetch(`${host}/api/notes/fetchallnode`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        const json = await response.json()\r\n        setNotes(json)\r\n    }\r\n\r\n     //fetch all users\r\n     const getUser = async () => {\r\n        const response = await fetch(`${host}/api/auth/getuser`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        const json = await response.json()  \r\n        setUser(json)\r\n    }\r\n    //add note\r\n    const addNote = async (title, description, tag) => {\r\n        const response = await fetch(`${host}/api/notes/addnote`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"token\")\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        });\r\n        const note = await response.json()\r\n        setNotes(notes.concat(note))\r\n    }\r\n    //delete note\r\n    const deleteNote = async (id) => {\r\n        const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"token\")\r\n            },\r\n\r\n        });\r\n        const json = await response.json()\r\n        console.log(json)\r\n        const newNotes = notes.filter((note) => { return note._id !== id })\r\n        setNotes(newNotes)\r\n    }\r\n\r\n    //edit note\r\n    const editNote = async (id, title, description, tag) => {\r\n        const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"token\")\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        });\r\n        const json = await response.json()\r\n        console.log(json)\r\n\r\n        let newNotes = JSON.parse(JSON.stringify(notes))\r\n        for (let index = 0; index < newNotes.length; index++) {\r\n            const element = newNotes[index];\r\n            if (element._id === id) {\r\n                newNotes[index].title = title;\r\n                newNotes[index].description = description;\r\n                newNotes[index].tag = tag\r\n                break\r\n            }\r\n\r\n        }\r\n        setNotes(newNotes);\r\n    }\r\n    return (\r\n        <NoteContext.Provider value={{user, notes, getNotes, addNote, deleteNote, editNote, getUser }}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}